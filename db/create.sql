-- MySQL Script generated by MySQL Workbench
-- Wed May  9 19:17:22 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`User` (
  `usr_id` INT NOT NULL AUTO_INCREMENT,
  `usr_username` VARCHAR(99) NOT NULL,
  `usr_password` VARCHAR(99) NOT NULL,
  `usr_email` VARCHAR(99) NOT NULL,
  `usr_country` VARCHAR(99) NULL,
  `usr_birthday` DATE NULL,
  `usr_gender` VARCHAR(99) NULL,
  PRIMARY KEY (`usr_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Post` (
  `post_id` INT NOT NULL AUTO_INCREMENT,
  `post_title` VARCHAR(99) NOT NULL,
  `post_date` DATETIME NOT NULL,
  `post_html` LONGTEXT NOT NULL,
  `post_author` INT NOT NULL,
  PRIMARY KEY (`post_id`),
  INDEX `fk_Post_User1_idx` (`post_author` ASC),
  CONSTRAINT `fk_Post_User1`
    FOREIGN KEY (`post_author`)
    REFERENCES `mydb`.`User` (`usr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Tag` (
  `tag_id` INT NOT NULL AUTO_INCREMENT,
  `tag_name` VARCHAR(99) NOT NULL,
  `tag_description` VARCHAR(99) NOT NULL,
  PRIMARY KEY (`tag_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Channel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Channel` (
  `chan_id` INT NOT NULL AUTO_INCREMENT,
  `chan_name` VARCHAR(99) NOT NULL,
  `chan_numOfSubs` INT NOT NULL,
  `chan_numOfPosts` INT NOT NULL,
  `chan_owner` INT NOT NULL,
  PRIMARY KEY (`chan_id`),
  INDEX `fk_Channel_User1_idx` (`chan_owner` ASC),
  CONSTRAINT `fk_Channel_User1`
    FOREIGN KEY (`chan_owner`)
    REFERENCES `mydb`.`User` (`usr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Comment` (
  `comm_id` INT NOT NULL AUTO_INCREMENT,
  `comm_message` LONGTEXT NOT NULL,
  `comm_date` DATETIME NOT NULL,
  `comm_post` INT NOT NULL,
  `comm_author` INT NOT NULL,
  `comm_reply` INT NOT NULL,
  PRIMARY KEY (`comm_id`),
  INDEX `fk_Comment_Post1_idx` (`comm_post` ASC),
  INDEX `fk_Comment_User1_idx` (`comm_author` ASC),
  INDEX `fk_Comment_Comment1_idx` (`comm_reply` ASC),
  CONSTRAINT `fk_Comment_Post1`
    FOREIGN KEY (`comm_post`)
    REFERENCES `mydb`.`Post` (`post_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Comment_User1`
    FOREIGN KEY (`comm_author`)
    REFERENCES `mydb`.`User` (`usr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Comment_Comment1`
    FOREIGN KEY (`comm_reply`)
    REFERENCES `mydb`.`Comment` (`comm_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`PM`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`PM` (
  `pm_id` INT NOT NULL AUTO_INCREMENT,
  `pm_date` DATETIME NOT NULL,
  `pm_message` LONGTEXT NOT NULL,
  `pm_sender` INT NOT NULL,
  `pm_receiver` INT NOT NULL,
  PRIMARY KEY (`pm_id`),
  INDEX `fk_PM_User1_idx` (`pm_sender` ASC),
  INDEX `fk_PM_User2_idx` (`pm_receiver` ASC),
  CONSTRAINT `fk_PM_User1`
    FOREIGN KEY (`pm_sender`)
    REFERENCES `mydb`.`User` (`usr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PM_User2`
    FOREIGN KEY (`pm_receiver`)
    REFERENCES `mydb`.`User` (`usr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Notification` (
  `noti_id` INT NOT NULL AUTO_INCREMENT,
  `noti_date` DATETIME NOT NULL,
  `noti_message` VARCHAR(99) NOT NULL,
  PRIMARY KEY (`noti_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`User_Notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`User_Notification` (
  `usr_noti_usr` INT NOT NULL,
  `usr_noti_noti` INT NOT NULL,
  `user_noti_id` INT NOT NULL,
  INDEX `fk_User_has_Notification_Notification1_idx` (`usr_noti_noti` ASC),
  INDEX `fk_User_has_Notification_User_idx` (`usr_noti_usr` ASC),
  PRIMARY KEY (`user_noti_id`),
  CONSTRAINT `fk_User_has_Notification_User`
    FOREIGN KEY (`usr_noti_usr`)
    REFERENCES `mydb`.`User` (`usr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Notification_Notification1`
    FOREIGN KEY (`usr_noti_noti`)
    REFERENCES `mydb`.`Notification` (`noti_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Sub`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Sub` (
  `sub_chan` INT NOT NULL,
  `sub_usr` INT NOT NULL,
  `sub_id` INT NOT NULL,
  INDEX `fk_Channel_has_User_User1_idx` (`sub_usr` ASC),
  INDEX `fk_Channel_has_User_Channel1_idx` (`sub_chan` ASC),
  PRIMARY KEY (`sub_id`),
  CONSTRAINT `fk_Channel_has_User_Channel1`
    FOREIGN KEY (`sub_chan`)
    REFERENCES `mydb`.`Channel` (`chan_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Channel_has_User_User1`
    FOREIGN KEY (`sub_usr`)
    REFERENCES `mydb`.`User` (`usr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Post_Tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Post_Tag` (
  `post_tag_id` INT NOT NULL,
  `post_tag_tag` INT NOT NULL,
  `post_tag_post` INT NOT NULL,
  PRIMARY KEY (`post_tag_id`, `post_tag_tag`, `post_tag_post`),
  INDEX `fk_Post_has_Tag_Tag1_idx` (`post_tag_tag` ASC),
  INDEX `fk_Post_has_Tag_Post1_idx` (`post_tag_post` ASC),
  CONSTRAINT `fk_Post_has_Tag_Post1`
    FOREIGN KEY (`post_tag_post`)
    REFERENCES `mydb`.`Post` (`post_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Post_has_Tag_Tag1`
    FOREIGN KEY (`post_tag_tag`)
    REFERENCES `mydb`.`Tag` (`tag_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Like`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Like` (
  `like_id` INT NOT NULL AUTO_INCREMENT,
  `like_author` INT NULL,
  `like_comment` INT NULL,
  `like_post` INT NOT NULL,
  PRIMARY KEY (`like_id`),
  INDEX `fk_Like_User1_idx` (`like_author` ASC),
  INDEX `fk_Like_Comment1_idx` (`like_comment` ASC),
  INDEX `fk_Like_Post1_idx` (`like_post` ASC),
  CONSTRAINT `fk_Like_User1`
    FOREIGN KEY (`like_author`)
    REFERENCES `mydb`.`User` (`usr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Like_Comment1`
    FOREIGN KEY (`like_comment`)
    REFERENCES `mydb`.`Comment` (`comm_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Like_Post1`
    FOREIGN KEY (`like_post`)
    REFERENCES `mydb`.`Post` (`post_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Dislike`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Dislike` (
  `dislike_id` INT NOT NULL AUTO_INCREMENT,
  `dislike_author` INT NULL,
  `dislike_comment` INT NULL,
  `dislike_post` INT NOT NULL,
  PRIMARY KEY (`dislike_id`),
  INDEX `fk_Dislike_User1_idx` (`dislike_author` ASC),
  INDEX `fk_Dislike_Comment1_idx` (`dislike_comment` ASC),
  INDEX `fk_Dislike_Post1_idx` (`dislike_post` ASC),
  CONSTRAINT `fk_Dislike_User1`
    FOREIGN KEY (`dislike_author`)
    REFERENCES `mydb`.`User` (`usr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Dislike_Comment1`
    FOREIGN KEY (`dislike_comment`)
    REFERENCES `mydb`.`Comment` (`comm_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Dislike_Post1`
    FOREIGN KEY (`dislike_post`)
    REFERENCES `mydb`.`Post` (`post_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Post_Channel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Post_Channel` (
  `chan_post_id` INT NOT NULL AUTO_INCREMENT,
  `chan_post_post` INT NOT NULL,
  `chan_post_chan` INT NOT NULL,
  PRIMARY KEY (`chan_post_id`, `chan_post_chan`, `chan_post_post`),
  INDEX `fk_Channel_has_Post_Post1_idx` (`chan_post_post` ASC),
  INDEX `fk_Channel_has_Post_Channel1_idx` (`chan_post_chan` ASC),
  CONSTRAINT `fk_Channel_has_Post_Channel1`
    FOREIGN KEY (`chan_post_chan`)
    REFERENCES `mydb`.`Channel` (`chan_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Channel_has_Post_Post1`
    FOREIGN KEY (`chan_post_post`)
    REFERENCES `mydb`.`Post` (`post_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Admin`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Admin` (
  `admin_id` INT NOT NULL AUTO_INCREMENT,
  `admin_usr` INT NOT NULL,
  PRIMARY KEY (`admin_id`),
  INDEX `fk_Admin_User1_idx` (`admin_usr` ASC),
  CONSTRAINT `fk_Admin_User1`
    FOREIGN KEY (`admin_usr`)
    REFERENCES `mydb`.`User` (`usr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
